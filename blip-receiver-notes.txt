BLIP RECEIVER:

 * b_receiver_listen:
 * @receiver: a #BReceiver object
 * @port: the UDP port to listen to
 *
 * Causes the @receiver to start to listen to the specified UDP
 * port. For each successfully received Blinkenlights packet, the
 * packet will be converted to host byteorder and the callback that
 * was specified on b_receiver_new() will be called.

 * Return value: %TRUE if the receiver listens to @port, %FALSE otherwise


RECEIVE CALLBACK:
static gboolean
callback (BReceiver *rec,
          BPacket   *packet,
          gpointer   callback_data)
[...]
packet->header.mcu_frame_h.width,
           packet->header.mcu_frame_h.height,
           packet->header.mcu_frame_h.channels,
           packet->header.mcu_frame_h.maxval);
[...]
for (h = 0; h < packet->header.mcu_frame_h.height; h++)
    {
      for (w = 0; w < packet->header.mcu_frame_h.width; w++)
        g_print ("%02x ", packet->data[h * packet->header.mcu_frame_h.width + w]);
      g_print ("\n");
    }

  return TRUE; /* returning FALSE would stop reception of packets */


BReceiver *receiver;
GMainLoop *loop;
b_init ();
receiver = b_receiver_new (callback, NULL);

